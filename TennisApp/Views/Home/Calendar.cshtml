@{
    ViewData["Title"] = "Расписание тренировок";
}

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/5.3.0/css/bootstrap.min.css">
<link rel="stylesheet" href="~/css/site.css" />

<style>
    #calendar-container {
        margin-top: 10px;
    }

    .table thead th {
        text-align: center;
    }

    .rounded-calendar {
        border-radius: 5px;
        overflow: hidden;
    }

    .calendar-day {
        border-radius: 50%;
        position: relative;
        text-align: center;
    }

        .calendar-day.clicked:before {
            content: '';
            position: absolute;
            top: -4px;
            left: -4px;
            right: -4px;
            bottom: -4px;
            border: 4px solid #3279FD;
            border-radius: 8px;
        }

    .event-details {
        background-color: white;
        padding: 10px;
        border: 1px solid #ccc;
        position: absolute;
        z-index: 999;
        width: 200px;
        border-radius: 10px;
        animation: fade-in 0.3s ease-in;
    }

    .calendar-day.has-events {
        font-weight: bold;
    }
</style>

<div class="container">
    <div class="row">
        <div class="col-12">
            <div class="text-center mb-2">
                <h2 class="display-inline" id="current-month"></h2>
                <button class="btn btn-primary prev-month">&lt;</button>
                <button class="btn btn-primary next-month">&gt;</button>
            </div>
            <div id="calendar-container" class="rounded-calendar p-3"></div>
        </div>
    </div>
</div>

<div class="event-details"></div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var currentDate = new Date();
        var currentMonth = currentDate.getMonth();
        var currentYear = currentDate.getFullYear();
        displayCalendar(currentMonth, currentYear);

        document.querySelector('.prev-month').addEventListener('click', function () {
            currentMonth--;
            if (currentMonth < 0) {
                currentMonth = 11;
                currentYear--;
            }
            displayCalendar(currentMonth, currentYear);
        });

        document.querySelector('.next-month').addEventListener('click', function () {
            currentMonth++;
            if (currentMonth > 11) {
                currentMonth = 0;
                currentYear++;
            }
            displayCalendar(currentMonth, currentYear);
        });

        function displayCalendar(month, year) {
            var monthNames = ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"];
            var firstDay = new Date(year, month, 1);
            var lastDay = new Date(year, month + 1, 0);
            var html = '<table class="table table-bordered"><thead><tr><th>Пн</th><th>Вт</th><th>Ср</th><th>Чт</th><th>Пт</th><th>Сб</th><th>Вс</th></tr></thead><tbody>';

            var date = 1;
            var firstDayIndex = (firstDay.getDay() + 6) % 7; // Начало недели с понедельника
            var lastDayDate = lastDay.getDate();

            for (var i = 0; i < 6; i++) {
                html += '<tr>';
                for (var j = 0; j < 7; j++) {
                    if (i === 0 && j < firstDayIndex) {
                        html += '<td></td>';
                    } else if (date > lastDayDate) {
                        break;
                    } else {
                        var dayClass = hasEventsOnDay(date, month, year) ? ' has-events' : '';
                        html += '<td class="calendar-day' + dayClass + '">' + date + '</td>';
                        date++;
                    }
                }
                html += '</tr>';
            }

            html += '</tbody></table>';

            document.getElementById('current-month').textContent = monthNames[month] + ' ' + year;
            document.getElementById('calendar-container').innerHTML = html;
        }

        function hasEventsOnDay(day, month, year, callback) {
            // Создать AJAX-запрос для получения данных о тренировках на указанный день
            var xhr = new XMLHttpRequest();
            xhr.open('GET', '/Home/GetEventDetails?day=' + day + '&month=' + (month + 1) + '&year=' + year);
            xhr.onload = function () {
                if (xhr.status === 200) {
                    var result = JSON.parse(xhr.responseText);
                    if (result.length > 0) {
                        console.log('Есть тренировки на указанный день');
                        callback(true);
                    } else {
                        console.log('Нет тренировок на указанный день');
                        callback(false);
                    }
                } else {
                    console.log('Ошибка при получении информации о тренировках');
                    callback(false);
                }
            };
            xhr.send();
        }

        document.addEventListener('click', function (event) {
            var target = event.target;
            if (target.classList.contains('calendar-day')) {
                var calendarDays = document.querySelectorAll('.calendar-day');
                calendarDays.forEach(function (day) {
                    day.classList.remove('clicked');
                });
                target.classList.add('clicked');

                var day = target.textContent;
                var month = document.getElementById('current-month').textContent.split(' ')[0];
                var year = document.getElementById('current-month').textContent.split(' ')[1];

                // Send AJAX request to get event details
                var xhr = new XMLHttpRequest();
                xhr.open('GET', '/Home/GetEventDetails?day=' + day + '&month=' + month + '&year=' + year);
                xhr.onload = function () {
                    if (xhr.status === 200) {
                        var result = JSON.parse(xhr.responseText);
                        var eventDetails = '';
                        if (result.length > 0) {
                            eventDetails += '<ul>';
                            result.forEach(function (item) {
                                eventDetails += '<li>' + item.time + ' - ' + item.name + '</li>';
                            });
                            eventDetails += '</ul>';
                        } else {
                            eventDetails = 'Тренировок нет';
                        }

                        document.querySelector('.event-details').innerHTML = eventDetails;
                        document.querySelector('.event-details').style.left = target.offsetLeft + 'px';
                        document.querySelector('.event-details').style.top = target.offsetTop + target.offsetHeight + 'px';
                        document.querySelector('.event-details').style.display = 'block';
                    } else {
                        alert('Ошибка при получении информации о событии.');
                    }
                };
                xhr.send();
            } else if (!target.closest('.event-details')) {
                var calendarDays = document.querySelectorAll('.calendar-day');
                calendarDays.forEach(function (day) {
                    day.classList.remove('clicked');
                });
                document.querySelector('.event-details').style.display = 'none';
            }
        });

        window.addEventListener('resize', function () {
            document.querySelector('.event-details').style.display = 'none';
        });
    });
</script>
